elements = [
	['H', 0],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['gap', 1],
	['He', 0],
	['\n', 2],
	['Li', 0],
	['Be', 0],
	['B', 0],
	['C', 0],
	['N', 0],
	['O', 0],
	['F', 0],
	['Ne', 0],
	['Na', 0],
	['Mg', 0],
	['Al', 0],
	['Si', 0],
	['P', 0],
	['S', 0],
	['Cl', 0],
	['Ar', 0],
	['K', 0],
	['Ca', 0],
	['Sc', 0],
	['Ti', 0],
	['V', 0],
	['Cr', 0],
	['Mn', 0],
	['Fe', 0],
	['Co', 0],
	['Ni', 0],
	['Cu', 0],
	['Zn', 0],
	['Ga', 0],
	['Ge', 0],
	['As', 0],
	['Se', 0],
	['Br', 0],
	['Kr', 0],
	['Rb', 0],
	['Sr', 0],
	['Y', 0],
	['Zr', 0],
	['Nb', 0],
	['Mo', 0],
	['Tc', 0],
	['Ru', 0],
	['Rh', 0],
	['Pd', 0],
	['Ag', 0],
	['Cd', 0],
	['In', 0],
	['Sn', 0],
	['Sb', 0],
	['Te', 0],
	['I', 0],
	['Xe', 0],
	['Cs', 0],
	['Ba', 0],
	['La', 0],
	['Ce', 0],
	['Pr', 0],
	['Nd', 0],
	['Pm', 0],
	['Sm', 0],
	['Eu', 0],
	['Gd', 0],
	['Tb', 0],
	['Dy', 0],
	['Ho', 0],
	['Er', 0],
	['Tm', 0],
	['Yb', 0],
	['Lu', 0],
	['Hf', 0],
	['Ta', 0],
	['W', 0],
	['Re', 0],
	['Os', 0],
	['Ir', 0],
	['Pt', 0],
	['Au', 0],
	['Hg', 0],
	['Tl', 0],
	['Pb', 0],
	['Bi', 0],
	['Po', 0],
	['At', 0],
	['Rn', 0],
	['Fr', 0],
	['Ra', 0],
	['Ac', 0],
	['Th', 0],
	['Pa', 0],
	['U', 0],
	['Np', 0],
	['Pu', 0],
	['Am', 0],
	['Cm', 0],
	['Bk', 0],
	['Cf', 0],
	['Es', 0],
	['Fm', 0],
	['Md', 0],
	['No', 0],
	['Lr', 0],
	['Rf', 0],
	['Db', 0],
	['Sg', 0],
	['Bh', 0],
	['Hs', 0],
	['Mt', 0],
	['Ds', 0],
	['Rg', 0],
	['Cn', 0],
	['Nh', 0],
	['Fl', 0],
	['Mc', 0],
	['Lv', 0],
	['Ts', 0],
	['Og', 0],
]

let cell
let table = document.getElementById('table')
for (let i=0; i<elements.length; i++) {
	switch (elements[i][1]) {
		case 0:
			cell = document.createElement('button')
			cell.textContent = elements[i][0]
			cell.classList.add('periodic')
			console.log(elements[i][0])
			table.appendChild(cell)
			break;

		case 1:
			cell = document.createElement('div')
			cell.classList.add('gap')
			table.appendChild(cell)
			break;
	case 2
			
	}
	
	

	
	
}